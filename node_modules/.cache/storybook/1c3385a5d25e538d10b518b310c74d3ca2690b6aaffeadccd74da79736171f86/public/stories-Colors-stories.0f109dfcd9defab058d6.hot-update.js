"use strict";
self["webpackHotUpdate_docudoc_ui_library"]("stories-Colors-stories",{

/***/ "./src/stories/Colors.stories.tsx":
/*!****************************************!*\
  !*** ./src/stories/Colors.stories.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Colors: () => (/* binding */ Colors),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_wrapper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/wrapper */ "./src/components/wrapper/index.ts");
/* harmony import */ var _components_typography__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/typography */ "./src/components/typography/index.ts");
/* harmony import */ var _components_copyIcon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/copyIcon */ "./src/components/copyIcon/index.ts");
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}




var BASE_COLORS = [{
  text: '--color-base-white',
  textColor: 'var(--color-base-gray)',
  backgroundColor: 'var(--color-base-white)',
  reference: 'White',
  value: '#ffffff'
}, {
  text: '--color-base-black',
  textColor: 'var(--color-base-white)',
  backgroundColor: 'var(--color-base-black)',
  reference: 'Black',
  value: '#000000'
}, {
  text: '--color-base-gray',
  textColor: 'var(--color-base-white)',
  backgroundColor: 'var(--color-base-gray)',
  reference: 'Gray',
  value: '#667085'
}, {
  text: '--color-base-variant',
  textColor: 'var(--color-base-gray)',
  backgroundColor: 'var(--color-base-variant)',
  reference: 'Variant',
  value: '#f2f4f7'
}, {
  text: '--color-base-border',
  textColor: 'var(--color-base-gray)',
  backgroundColor: 'var(--color-base-border)',
  reference: 'Border',
  value: '#f0f1f1'
}];
var GRAY_COLORS = [{
  text: '--color-gray-25',
  textColor: 'var(--color-base-gray)',
  backgroundColor: 'var(--color-gray-25)',
  reference: 'Gray 25',
  value: '#fcfcfd'
}, {
  text: '--color-gray-50',
  textColor: 'var(--color-base-gray)',
  backgroundColor: 'var(--color-gray-50)',
  reference: 'Gray 25',
  value: '#f5f5f6'
}, {
  text: '--color-gray-100',
  textColor: 'var(--color-base-gray)',
  backgroundColor: 'var(--color-gray-100)',
  reference: 'Gray 100',
  value: '#f0f1f1'
}, {
  text: '--color-gray-200',
  textColor: 'var(--color-base-gray)',
  backgroundColor: 'var(--color-gray-200)',
  reference: 'Gray 200',
  value: '#ececed'
}, {
  text: '--color-gray-300',
  textColor: 'var(--color-base-gray)',
  backgroundColor: 'var(--color-gray-300)',
  reference: 'Gray 300',
  value: '#cecfd2'
}, {
  text: '--color-gray-400',
  textColor: 'var(--color-base-white)',
  backgroundColor: 'var(--color-gray-400)',
  reference: 'Gray 400',
  value: '#98a2b3'
}, {
  text: '--color-gray-500',
  textColor: 'var(--color-base-white)',
  backgroundColor: 'var(--color-gray-500)',
  reference: 'Gray 500',
  value: '#667085'
}, {
  text: '--color-gray-600',
  textColor: 'var(--color-base-white)',
  backgroundColor: 'var(--color-gray-600)',
  reference: 'Gray 600',
  value: '#475467'
}, {
  text: '--color-gray-700',
  textColor: 'var(--color-base-white)',
  backgroundColor: 'var(--color-gray-700)',
  reference: 'Gray 700',
  value: '#344054'
}, {
  text: '--color-gray-800',
  textColor: 'var(--color-base-white)',
  backgroundColor: 'var(--color-gray-800)',
  reference: 'Gray 800',
  value: '#182230'
}, {
  text: '--color-gray-900',
  textColor: 'var(--color-base-white)',
  backgroundColor: 'var(--color-gray-900)',
  reference: 'Gray 900',
  value: '#101828'
}, {
  text: '--color-gray-950',
  textColor: 'var(--color-base-white)',
  backgroundColor: 'var(--color-gray-950)',
  reference: 'Gray 950',
  value: '#0c111d'
}];
var header = {
  title: 'Colors',
  text: 'Our design system leverages a purposeful set of color styles as the perfect starting point for any brand or project. When it comes to color, contrast is critical for ensuring text is legible.'
};
var meta = {
  title: 'Foundation/Colors',
  parameters: {
    controls: {
      expanded: true
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
var ColorCard = function ColorCard(_ref) {
  var text = _ref.text,
    textColor = _ref.textColor,
    backgroundColor = _ref.backgroundColor,
    reference = _ref.reference,
    value = _ref.value;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: "color-card"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      backgroundColor: backgroundColor
    },
    className: "color-card-top-content"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_copyIcon__WEBPACK_IMPORTED_MODULE_3__.CopyIcon, {
    style: {
      color: textColor
    },
    value: "var(".concat(text, ")"),
    size: "md"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_typography__WEBPACK_IMPORTED_MODULE_2__.Typography, {
    className: "color-card-text",
    style: {
      color: textColor
    }
  }, text)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: "color-card-bottom-content"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_typography__WEBPACK_IMPORTED_MODULE_2__.Typography, {
    className: "color-card-strong-text"
  }, reference), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_typography__WEBPACK_IMPORTED_MODULE_2__.Typography, {
    className: "color-card-light-text"
  }, value === null || value === void 0 ? void 0 : value.toUpperCase())));
};
var Colors = {
  render: function render() {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_wrapper__WEBPACK_IMPORTED_MODULE_1__.Wrapper, {
      header: header
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      className: "row"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      className: "column column-small"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_typography__WEBPACK_IMPORTED_MODULE_2__.Typography, {
      className: "section-title"
    }, "Base"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_typography__WEBPACK_IMPORTED_MODULE_2__.Typography, {
      className: "section-text"
    }, "These are base dark and light color styles to quickly wrap out if you need to")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      className: "column column-large"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      className: "cards-wrapper"
    }, BASE_COLORS.map(function (entry) {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ColorCard, _extends({
        key: entry.value
      }, entry));
    })))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      className: "row"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      className: "column column-small"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_typography__WEBPACK_IMPORTED_MODULE_2__.Typography, {
      className: "section-title"
    }, "Gray"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_typography__WEBPACK_IMPORTED_MODULE_2__.Typography, {
      className: "section-text"
    }, "This is a variation of gray color inline with dark and light modes")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      className: "column column-large"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      className: "cards-wrapper"
    }, GRAY_COLORS.map(function (entry) {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ColorCard, _extends({
        key: entry.value
      }, entry));
    })))));
  }
};
Colors.parameters = {
  ...Colors.parameters,
  docs: {
    ...Colors.parameters?.docs,
    source: {
      originalSource: "{\n  render: () => <Wrapper header={header}>\n      <div className=\"row\">\n        <div className=\"column column-small\">\n          <Typography className=\"section-title\">Base</Typography>\n          <Typography className=\"section-text\">\n            These are base dark and light color styles to quickly wrap out if\n            you need to\n          </Typography>\n        </div>\n        <div className=\"column column-large\">\n          <div className=\"cards-wrapper\">\n            {BASE_COLORS.map(entry => <ColorCard key={entry.value} {...entry} />)}\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"column column-small\">\n          <Typography className=\"section-title\">Gray</Typography>\n          <Typography className=\"section-text\">\n            This is a variation of gray color inline with dark and light modes\n          </Typography>\n        </div>\n        <div className=\"column column-large\">\n          <div className=\"cards-wrapper\">\n            {GRAY_COLORS.map(entry => <ColorCard key={entry.value} {...entry} />)}\n          </div>\n        </div>\n      </div>\n    </Wrapper>\n}",
      ...Colors.parameters?.docs?.source
    }
  }
};;const __namedExportsOrder = ["Colors"];

/***/ })

});
//# sourceMappingURL=stories-Colors-stories.0f109dfcd9defab058d6.hot-update.js.map