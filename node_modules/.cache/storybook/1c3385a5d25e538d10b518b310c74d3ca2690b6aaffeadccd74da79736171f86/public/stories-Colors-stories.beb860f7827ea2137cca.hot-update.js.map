{"version":3,"file":"stories-Colors-stories.beb860f7827ea2137cca.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAGA","sources":["webpack://@docudoc/ui-library/./src/components/copyIcon/CopyIcon.tsx"],"sourcesContent":["import React, { FC, CSSProperties, useState } from 'react';\nimport { Copy, Check } from 'react-feather';\n\nimport styles from './CopyIcon.module.scss';\n\nconst ICON_SIZE_MAP = {\n  xs: 8,\n  sm: 12,\n  md: 16,\n  lg: 20,\n};\n\ninterface ICopyIcon {\n  value: string;\n  style?: CSSProperties;\n  size?: 'xs' | 'sm' | 'md' | 'lg';\n  onCopy: (value: string) => void;\n}\n\nconst CopyIcon: FC<ICopyIcon> = ({ value, style, onCopy, size = 'sm' }) => {\n  const [copied, setCopied] = useState(false);\n\n  const onCopyValue = () => {\n    navigator.clipboard\n      .writeText(value)\n      .then(() => {\n        setCopied(true);\n        setTimeout(() => {\n          setCopied(false);\n        }, 2000);\n      })\n      .catch((error) => {\n        console.error('Failed to copy value to clipboard:', error);\n      });\n  };\n\n  return (\n    <span\n      data-testid=\"copy-icon\"\n      onClick={onCopyValue}\n      className={styles['copy-icon']}\n    >\n      {copied ? (\n        <Check size={ICON_SIZE_MAP[size]} style={style} />\n      ) : (\n        <Copy size={ICON_SIZE_MAP[size]} style={style} />\n      )}\n    </span>\n  );\n};\n\nexport type { ICopyIcon };\nexport { CopyIcon };\n"],"names":[],"sourceRoot":""}