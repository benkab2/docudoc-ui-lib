{"version":3,"file":"components-typography-Typography-stories.535d1969930d9705e270.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAOA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA","sources":["webpack://@docudoc/ui-library/./src/components/wrapper/Wrapper.tsx","webpack://@docudoc/ui-library/./node_modules/classnames/index.js"],"sourcesContent":["import React, { FC, useEffect } from 'react';\n\nimport { Container } from '../gridLayout';\nimport { Typography } from '../typography';\n\nimport styles from './Wrapper.module.scss';\n\ninterface IWrapper {\n  title: string;\n  children: React.ReactNode;\n  style?: any;\n}\n\nconst Wrapper: FC<IWrapper> = ({ title, children, style = {} }) => {\n  // const [globals = {}, updateGlobals] = useGlobals();\n\n  // const activeTheme = globals?.backgrounds?.value || 'default-value';\n  // const [args, updateArgs] = useArgs();\n\n  useEffect(() => {\n    // console.log('activeTheme', activeTheme);\n    // document.body.setAttribute('theme', 'light');\n    document.body.dataset.theme = 'light';\n  }, []);\n\n  return (\n    <div className={styles['wrapper__background']}>\n      <Container>\n        <div className={styles.wrapper}>\n          <div className={styles['wrapper__header']}>\n            <Typography className={styles['wrapper__title']}>\n              {title}\n            </Typography>\n          </div>\n          <div className={styles['wrapper__body']} style={style}>\n            {children}\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport { Wrapper };\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":[],"sourceRoot":""}